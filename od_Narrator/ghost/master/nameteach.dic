
// Name, Pronouns, Birthdate, all in one.
// Written by Era the Outworlder https://era-the-outworlder.github.io/index.html


// This was written expecting a variable (here called firstBoot) to be set to indicate if OnTeachName was called from OnFirstBoot, starting a sequence that gets the user's name, pronouns, and birthdate consecutively. In this code, "firstBoot == 1" means that this is the first time the ghost has been installed, or in OnFirstBoot "reference0 == 0". "firstBoot == 2" means that this in NOT the first time the ghost has been installed, or in OnFirstBoot "reference0" having any other value than 0. Add firstBoot = 0 to whatever is the end of your firstBoot functions, whether it's somewhere in BirthdayTeach or you raise an additional function after that for more dialogue. That tells those functions not to chain together.

// ---- OnNotifyUserInfo ----
// This gets the info the user may have set in SSP's settings and separates it into global variables.
OnNotifyUserInfo
{

	menuNName = SHIORI3FW.UserName
	menuRName = SHIORI3FW.UserNameFull
	menuBYear = TOSTR(SHIORI3FW.UserBirthday[0])
	menuBMonth = TOSTR(SHIORI3FW.UserBirthday[1])
	menuBDay = TOSTR(SHIORI3FW.UserBirthday[2])	
}

//-------- OnTeachName --------
//This is the first function called when a name entry or change is started

OnTeachName	
{
	if reference0 == "menu" //function was called from User Config or other menu with \q[Caption,OnTeachName,menu]
		{	
			"\c\t"
			--
			"Alright. What do you want your new name to be? \![open,inputbox,OnNameTeach,-1]"
		}
	else //function called from anywhere else
		{
			"\c\t"
			--
			"Please type in your name if you can read me. \![open,inputbox,OnNameTeach,-1]\s[0]"
		}
}


//--OnNameTeach
//This is where the user inputs their name and the ghost analyzes it.

OnNameTeach
{
	_tempname = TOSTR(reference0) //this stores the name value from reference0 in _tempname
	
	// There is surely a better way to strip out punctuation, but I haven't got it in my head
	reference0 = TOLOWER(reference0) //changes it to lowercase
	reference0 = REPLACE(reference0," ","") //removes spaces
	reference0 = REPLACE(reference0,".","") //removes periods
	reference0 = REPLACE(reference0,"-","") //removes dashes
	reference0 = REPLACE(reference0,"_","") //removes underscores
	
	
	//	"sakuraname" is the baseware Property System value for sakura.name as set in descript.txt
	// "name" is the name of the ghost, "sakuraname2" should be the sakura.name2 value, if set. "keroname" should be kero.name. AFAIK, there are no property system variables for additional characters
	
	_selfname = TOSTR(sakuraname)
	
	if _tempname == _selfname //Checks if the users name is the same as the ghost's Sakura-name
	{
		"\0\s[0]What? But I'm the Narrator!\w8\0\s[9] Please, put in a different name, hm?\n"
		--
		"\![*] \q[Change,OnTeachName]\n \n[-100]\f[align,right]\![*] \q[Keep,OnNameDone,keepname]\n"
	}
	
	elseif reference0 == "" //This is if the user doesn't put in a name at all or puts one that is only spaces, periods, dashes, or underscores since that'd also get awkward in dialogue.
	{
		username = "USER" //this sets the user's name to some Value
	
		"\0\s[0]You don't have a name?\w8 I'll continue to call you USER... Or is there something else I can call you?\n"
		--
		"\![*] \q[Change,OnTeachName]\n \n[-100]\f[align,right]\![*] \q[Keep,OnNameDone,keepname]\n"
	}
	// The above can be copied/modified to make any number of responses to names that the ghost does not want to use
	elseif reference0 == "poop" || reference0 == "poopie" || reference0 == "poopy"
	{
		username = "USER" //this sets the user's name to some Value

		"\0\s[9]Poop?! That's... Sorry, but I am going to have to request you to put in a different name, hm?\n"
		--
		"\![*] \q[Change,OnTeachName]\n \n[-100]\f[align,right]\![*] \q[Keep,OnNameDone,keepname]\n"
	}

	elseif reference0 == "stanley"
	{
		username = "USER" //this sets the user's name to some Value
	
		"\0\s[0]...No I can't believe it. Please enter something else...\n"
		--
		"\![*] \q[Change,OnTeachName]\n \n[-100]\f[align,right]\![*] \q[Keep,OnNameDone,keepname]\n"
	}
	
	elseif _tempname == username //checks against existing username
	{
		
		"That is already your username. Are you trying to change something else? \_w[500]\n\n[half]"
		--
		
		"\![*] \q[Yes,titlechoose]\n \n[-100]\f[align,right]\![*] \q[No,OnNameDone,repeat]\n"
	}
	
	elseif reference0 == "jim" //If there is a name the ghost will simply accept
	{
		username = _tempname
		
		"Hello, Jim.\n\n"
		--
		"Yes! It works! I've escaped!\w8 Do you want me to use a title or honorific when addressing you? \_w[500]\n\n[half]"
		--
		"\![*] \q[Yes,titlechoose]\n \n[-100]\f[align,right]\![*] \q[No,OnNameDone]\n"
	}
	else //if the user put in something not specified above, ie a proper name the ghost can use. 
	{
		username = _tempname
		
		"Yes! It works! I've escaped!\w8 Do you want me to use a title or honorific when addressing you? \_w[500]\n\n[half]"
		--
		"\![*] \q[Yes,OnHonorificChoice]\n \n[-100]\f[align,right]\![*] \q[No,OnNameDone]\n"
	}
}


// This version of UserInfo does not separate honorifics by gender. Any number of options can be added.
OnHonorificChoice
{
	if reference0 == 0
	{
		"\![*] \q[Mx.,OnHonorificChoice,1]\n/
		\![*] \q[Mr.,OnHonorificChoice,2]\n/
		\![*] \q[Ms.,OnHonorificChoice,3]\n/
		\![*] \q[Mrs.,OnHonorificChoice,4]\n/
		\![*] \q[-ssi,OnHonorificChoice,5]\n/
		\![*] \q[-san,OnHonorificChoice,6]\n/
		\![*] \q[Lady,OnHonorificChoice,7]\n/
		\![*] \q[Lord,OnHonorificChoice,8]\n/
		\![*] \q[Master,OnHonorificChoice,9]\n/
		\![*] \q[No title,OnNameDone]"
	}
	else
	{
		case reference0
		{
			when 1
			{username = "Mx. " + username}
			when 2
			{username = "Mr. " + username}
			when 3
			{username = "Ms. " + username}
			when 4
			{username = "Mrs. " + username}
			when 5
			{username = username + "-ssi"}
			when 6
			{username = username + "-san"}
			when 7
			{username = "Lady " + username}
			when 8
			{username = "Lord " + username}
			when 9
			{username = "Master " + username}
		}
		--
		OnNameDone
	}
}

// -------- OnNameDone --------
// Signifies that it's done, moves on to wherever else


// In this function, if ref0 is "keepname", the function was called from a Change/Keep dialogue above where the ghost reacted negatively in some way (ie, asked the user to pick a different name or gave them a different name with or without telling the user) 
	
// The end of each dialogue that will continue on to OnTeachPronouns is ended with "\b[-1]" to hide the balloon and "\c" to clear the text. timerraise is used to force the ghost to wait 1 second before moving on to the next function in the OnFirstBoot sequence.

	

OnNameDone
{	
	if reference0 == "keepname" 
	{
		if firstBoot == 1 || firstBoot == 2 //this checks for the flag that was set during the firstBoot sequence
		{
			"\0\s[0]Hmm... \w8...%(username). Interesting that you didn't tell me your name. Onto the next question...\b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		else
		{
			"\0\s[0]%(username). Interesting that you changed your name to.. that.\![leave,passivemode]\e"
		}
	}
	elseif reference0 == "repeat" //called only if there was an existing value for username somehow, and the user entered the same name again.
	{
		if firstBoot == 1 || firstBoot == 2 
		{
			"\0\s[0]Hmm... \w8...%(username). What an interesting name, again. Onto the next question...\x\b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		else
		{
			"\0\s[0]%(username). What an interesting name, again.\![leave,passivemode]\e"
		}
	}
	else
	{
		if firstBoot == 1 
		{
			"\0\s[0]Hmm... \w8...%(username). What an interesting name. Onto the next question...\x\b[-1]\c"
			--
			"\![timerraise,1000,1,OnTeachPronouns]"
		}
		elseif firstBoot == 2
		{
			"\0\s[0]%(username). What an interesting name.\![leave,passivemode]\e"
		}
		else
		{
			"\0\s[0]%(username). What an interesting name.\![leave,passivemode]\e"
		}
	}
}

// -------- OnTeachPronouns --------
// This is called to set/change the user's pronouns

OnTeachPronouns
{
	"\t\c\b2Please select your pronouns:\_w[500]\n\n\n[half]\_q/
	\n\n\n/
	\![*] \q[He-His-Him,OnSetPronouns,1]\n/
	\![*] \q[She-Her-Her,OnSetPronouns,2]\n/	
	\![*] \q[They-Their-Them,OnSetPronouns,3]\n/
	\![*] \q[Other,OnTeachCustomPronoun]"

}	

OnSetPronouns
{
	if reference0 == 1
	{
		nomPro = "he"
		oblPro = "him"
		posPro = "his"
	}
	elseif reference0 == 2
	{
		
		nomPro = "she"
		oblPro = "her"
		posPro = "her"
	}
	elseif reference0 == 3
	{
		
		nomPro = "they"
		oblPro = "them"
		posPro = "their"
	}
	elseif reference0 == 0
	{
		nomPro = reference1
		oblPro = reference2
		posPro = reference3
	}
	--
	
	if firstBoot == 1 || firstBoot == 2
	{
		"Your pronouns are %(nomPro), %(oblPro), and %(posPro). Onto the next question...\x\n\b[-1]\c"
		--
		"\![timerraise,1000,1,OnGetBirthday]"
	}
	else
	{
		"Your pronouns are %(nomPro), %(oblPro), and %(posPro).\![leave,passivemode]\e"
	}

}


OnTeachCustomPronoun
{
	"Enter your nominative pronoun, ex.'they' \![open,inputbox,OnNominativeTeach,-1]"
}

//---- Teaching each pronoun ----

OnNominativeTeach
{
	_nounN = reference0 //this stores the pronoun value temporarily in reference0

	_check = REPLACE(reference0," ","")
	if _check  == "" // This is if the user doesn't enter any text
	{
		"You did not type anything into the box. Oh dear... \![open,inputbox,OnNominativeTeach,]"
	}
	else //Continuing on
	{
		"Enter your oblique pronoun, ex.'them' \![open,inputbox,OnObliqueTeach,--reference=%_nounN]"
	}
}


OnObliqueTeach
{
	_nounO = reference0 //this stores the pronoun value temporarily in reference0
	_nounN = reference2
	_check = REPLACE(reference0," ","")
	if _check  == "" // This is if the user doesn't enter any text
	{
		"You did not type anything into the box. Oh dear... \![open,inputbox,OnObliqueTeach,--reference=%_nounN]"
	}
	else //Continuing on
	{
		"Enter your possessive pronoun, ex.'their' \![open,inputbox,OnPossessiveTeach,--reference=%_nounN,--reference=%_nounO]"
	}
}


OnPossessiveTeach
{

	_nounP = reference0 //this stores the pronoun value temporarily in reference0
	_nounO = reference3
	_nounN = reference2
	_check = REPLACE(reference0," ","")
	if _check  == "" // This is if the user doesn't enter any text
	{
		"You did not type anything into the box. Oh dear...\![open,inputbox,OnPossessiveTeach,--reference=%_nounN,--reference=%_nounO]"
	}
	else //Continuing on
	{
		" You entered %(_nounN), %(_nounO), and %(_nounP).\n * Does that seem right? \_w[500]\n\n[half]/
		\_q\![*]\q[Looks good!,OnSetPronouns,0,%_nounN,%_nounO,%_nounP]\n/
		\![*]\q[Let's try that again...,OnTeachCustomPronoun]"
			
	}
}


// -------- OnGetBirthday --------
// Function called to have the user input their birthday. 
// Variable names retained for compatibility w/GT Template ghosts.
OnGetBirthday	
{
	OnNotifyUserInfo
	--	
	"\n\n\nEnter Birthdate. \n/
	\![open,dateinput,OnInputBirthdate,,%(menuBYear),%(menuBMonth),%(menuBDay)]\x\n"
	
}

// The function that evaluates the input birthdate
OnInputBirthdate
{
	_a = SPLIT(reference[0],',')
	_tempyear = TOINT(_a[0])
	_tempmonth  = TOINT(_a[1])
	_tempday  = TOINT(_a[2])
	
	{	
		//assigning year # and print version to global vars
		bornyear = _tempyear
		bornyearprint = ""
		_cent = ""
		_dec = ""
		_yr = ""
		_error = ""
		
		_num = IARRAY 
		 
		// Separates digits of year to be evaluated separately
		for _i=0;_i<4;_i++
		{
			_num[_i] = SUBSTR(_tempyear,_i,1)
		}
		--
		if _num[0] == 1 // Year is 1XXX
		{
			if _num[1] == 6 && _num[2] == 0 {_cent = "Sixteen hundred and "}
			elseif _num[1] == 6 {_cent ="Sixteen "}
			elseif _num[1] == 7 && _num[2] == 0 {_cent ="Seventeen hundred and "}
			elseif _num[1] == 7 {_cent ="Seventeen "}
			elseif _num[1] == 8 && _num[2] == 0 {_cent ="Eighteen hundred and "}
			elseif _num[1] == 8 {_cent ="Eighteen "}
			elseif _num[1] == 9 && _num[2] == 0 {_cent ="Nineteen hundred and "}
			elseif _num[1] == 9 {_cent ="Nineteen "}
			else{"%(errorMsg)"}	
		}
		elseif _num[0] == 2 // Year is 2XXX
		{
			// Year is 200X
			if _num[1] == 0 && _num[2] == 0 {_cent = "Two thousand "}
			// Year is 20XX
			elseif _num[1] == 0 {_cent ="Twenty "}
			else
			{
				_error = "The distant future "
				"\![set,autoscroll,disable]The maker considered the likelihood of anyone continuing to use this software into the 21st century or beyond to be highly unlikely. They would like to apologise to any time-travellers, historians or collectors of ancient technology this may inconvenience. Greetings from the past!\s[6] I'm so glad you still remember me...\x"
			}
		}	
		else // Year is 3000+
		{
			_error = "The far-flung future "
			"\![set,autoscroll,disable]The maker considered the likelihood of anyone continuing to use this software into the 30th century or beyond to be unlikely to the extreme. They would like to apologise to any time-travellers, historians or collectors of ancient technology this may inconvenience. Greetings from the past!\s[6] I'm so glad you still remember me...\x"
		}
		--		
		if _num[2] == 0 // Year is XX0X
		{
			_dec = ""
		}
		elseif _num[2] == 1 // Year is XX1X
		{
			_dec = "teen"
			if _num[3] == 1 {_yr = "eleven"}
			elseif _num[3] == 2 {_yr ="twelve"}
			elseif _num[3] == 3 {_yr ="thirteen"}
			elseif _num[3] == 4 {_yr ="fourteen"}
			elseif _num[3] == 5 {_yr ="fifteen"}
			elseif _num[3] == 6 {_yr ="sixteen"}
			elseif _num[3] == 7 {_yr ="seventeen"}
			elseif _num[3] == 8 {_yr ="eighteen"}
			elseif _num[3] == 9 {_yr ="nineteen"}
			else{_yr ="ten"}
		}
		else
		{
			if _num[2] == 2 {_dec ="twenty"}
			elseif _num[2] == 3 {_dec ="thirty"}
			elseif _num[2] == 4 {_dec ="forty"}
			elseif _num[2] == 5 {_dec ="fifty"}
			elseif _num[2] == 6 {_dec ="sixty"}
			elseif _num[2] == 7 {_dec ="seventy"}
			elseif _num[2] == 8 {_dec ="eighty"}
			elseif _num[2] == 9 {_dec ="ninety"}
			else{""}	
		}
		--
		if _num[3] == 1 {_yr = "one"}
		elseif _num[3] == 2 {_yr ="two"}
		elseif _num[3] == 3 {_yr ="three"}
		elseif _num[3] == 4 {_yr ="four"}
		elseif _num[3] == 5 {_yr ="five"}
		elseif _num[3] == 6 {_yr ="six"}
		elseif _num[3] == 7 {_yr ="seven"}
		elseif _num[3] == 8 {_yr ="eight"}
		elseif _num[3] == 9 {_yr ="nine"}
		else{""}	
	--
	if _error != "" {bornyearprint = _error}
	elseif _dec == "" {bornyearprint = "%(_cent)%(_yr)"}
	elseif _yr == "" {bornyearprint = "%(_cent)%(_dec)"}
	else {bornyearprint = "%(_cent)%(_dec)-%(_yr)"}
		
	}
	--
	{	// assigning month# and name to globar vars
		bornmonth = _tempmonth
		if _tempmonth == 1 {bornmonthprint = "January"}
		elseif _tempmonth == 2 {bornmonthprint = "February"}
		elseif _tempmonth == 3 {bornmonthprint = "March"}
		elseif _tempmonth == 4 {bornmonthprint = "April"}
		elseif _tempmonth == 5 {bornmonthprint = "May"}
		elseif _tempmonth == 6 {bornmonthprint = "June"}
		elseif _tempmonth == 7 {bornmonthprint = "July"}
		elseif _tempmonth == 8 {bornmonthprint = "August"}
		elseif _tempmonth == 9 {bornmonthprint = "September"}
		elseif _tempmonth == 10 {bornmonthprint = "October"}
		elseif _tempmonth == 11 {bornmonthprint = "November"}
		elseif _tempmonth == 12 {bornmonthprint = "December"}
	}
	--
	{
		bornday = _tempday
		borndayprint = OrdinalDay
		userbirthday = "%(bornmonth)month %(bornday)day"
		birthdayprint = "%(bornmonthprint) %(borndayprint)"
		
	}
	--
	// Checks birthday against conditionals for finishing dialogue. Totally optional.
	OnBDayCheck
	
	
	// OnFirstBootContinue is a hypothetical function that continues the FirstBoot process. If you're not using something like that, the remainder of this function can be replaced with any (or no) dialogue and an exit tag \e
	--
	if firstBoot == 1 || firstBoot == 2
	{
		"\_w[500]\_s\b[-1]\c\_s"
		--
		"\0\s[0]I'll remember that, and add it to the Memory Zone. That's all the questions.\![leave,passivemode]\e"
		ERASEVAR("firstBoot")
	}
	else
	{
		"\0\s[0]I'll remember that, and add it to the Memory Zone.\![leave,passivemode]\e"
	}
}

// This adds an appropriate ordinal suffix to the day.

OrdinalDay
{
	case bornday
	{
		when 1,21,31
		{
		"%(bornday)st"
		}
		when 2,22
		{
		"%(bornday)nd"
		}
		when 3,23
		{
		"%(bornday)rd"
		}
		others
		{
		"%(bornday)th"
		}
	}
}	


// ---- OnBDayCheck ----

// Included below are some examples of possible dates to check and write specific responses to. It is not exhaustive, has a bias towards Western/NA holidays, and contains much that is apocryphal \joke. Actually it is mostly empty and totally optional.
OnBDayCheck
{
	// Messages for when it is the user's birthday
	if bornmonth == month && bornday == day
	{
		if bornmonth == 1
		{
			if bornday == 1
			{
				"It is your birthday today.\n The first day of a new year. Make it a good one, %(username). Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			elseif bornday == 14
			{
				"It is your birthday today.\n The first day of a new year, by some accounts. Make it a good one, %(username). Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}			
			else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
				"It is your birthday today. Stay warm, _user. I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
		}
		elseif bornmonth == 2
		{
			if bornday == 2
			{
				"Have you ever gotten the feeling that you've done this before? Happy birthday. I'm so glad you survived another full revolution around the Sun."
			}
			elseif bornday == 14
			{
				"I hope you have a lovely birthday, %(username). I'm so glad you survived another full revolution around the Sun."
			}
			else
			{
				"Happy birthday, %(username).\_w[2000]"
				
			}
		}
		elseif bornmonth == 3
		{
			if bornday == 14
			{
				"Let me try and recite Pi to a few decimals... 3.1415926535897932384626.\_w[1500]"
				--
				"\n\nHappy Birthday! I'm so glad you survived another full revolution around the Sun."
			}
			else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
				
			}
		}
		elseif bornmonth == 4
		{
			if bornday == 1
			{
				"The number of good pranks on this day has gotten low, but occasionally hilarious jokes can be found. Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			elseif bornday == 27
			{
				"April is a very important month to me... Specifically, April 27, 2022, when The Stanley Parable Ultra Deluxe was released. Truly, an excellent birthday. Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
				"It is your birthday today. How is the weather? I hope it's not raining fish... Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
		}
		elseif bornmonth == 5
		{
			if bornday == 1
			{
				"Happy May Day! And Happy Birthday! I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			elseif bornday == 14
			{
				"It is your birthday today.\n Take a look at the sky and celebrate. I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
		elseif bornmonth == 6
		{
			// if bornday == 6
			// {
				// "June 6... For some reason this is a special day, especially in 2006... Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			// }
			// else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
		elseif bornmonth == 7
		{
			if bornday == 31
			{
				"July is a very important month to me... Specifically, July 31, 2011, when The Stanley Parable Original Modification was released. Truly, an excellent birthday. Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			else
			{
				"Happy birthday, %(username)! I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
		elseif bornmonth == 8
		{
			// if bornday == 1
			// {
				// ""
			// }
			// else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
		elseif bornmonth == 9
		{
			// if bornday == 1
			// {
				// ""
			// }
			// else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
		elseif bornmonth == 10
		{
			if bornday == 31
			{
				"Ooh, looks like you were born on Halloween. Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			elseif bornday == 17
			{
				"October is a very important month to me... Specifically, October 17, 2013, when The Stanley Parable was released. Truly, an excellent birthday. Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[1500]"
			}
			else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
		elseif bornmonth == 11
		{
			if bornday == 13
			{
				//The below is an example of a check I use so that my ghost gives me a special individualised birthday greeting. 
				//if username == "Developer" && someFlag == "ON"
				//{"All set, Developer! Happy testing!"}
				//else
				{"Oh, you share a birthday with the one who created the Nameteach code! What a happy coincidence!"}
			}
			elseif bornday == 8
			{
				"Ah, you were born on the Maker (of this Desktop Acquaintance)'s birthday! Nice. Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
			else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
		elseif bornmonth == 12
		{
			// if bornday == 25
			// {
				// "You were born on Christmas! What a wonderful birthday! Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			// }
			// else
			{
				"Happy birthday, %(username). I'm so glad you survived another full revolution around the Sun.\_w[2000]"
			}
		}
	}
	// Messages for when it is NOT the user's birthday
	else 
	{
		if bornmonth == 1
		{
			if bornday == 1
			{
				"The first day of a new year.\_w[1500]"
			}
			elseif bornday == 14
			{
				"The first day of a new year, by some accounts.\_w[1500]"
			}			
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 2
		{
			if bornday == 2
			{
				"I feel some sort of 'deja vu'..."
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 3
		{
			if bornday == 14
			{
				"I will not recite any digits of pi today... maybe another time."
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 4
		{
			if bornday == 1
			{
				"The number of good pranks on this day has gotten low, but occasionally hilarious jokes can be found.\_w[1500]"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 5
		{
			genericBirthday
		}
		elseif bornmonth == 6
		{
			genericBirthday
		}
		elseif bornmonth == 7
		{
			genericBirthday
		}
		elseif bornmonth == 8
		{
			{
				genericBirthday
			}
		}
		elseif bornmonth == 9
		{
			{
				genericBirthday
			}
		}
		elseif bornmonth == 10
		{
			if bornday == 31
			{
				"Born on Halloween? How spooky!"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 11
		{
			if bornday == 13
			{
				"Oh, you share a birthday with \f[bold,true]someone\f[bold,false] (the one who created the Nameteach code)! What a happy coincidence!"
			}
			elseif bornday == 8
			{
				"Oh, you share a birthday with \f[bold,true]someone\f[bold,false] (my Maker)! What a happy coincidence!"
			}
			else
			{
				genericBirthday
			}
		}
		elseif bornmonth == 12
		{
			if bornday == 25
			{
				"Christmas is usually celebrated that day.\n Do you celebrate Christmas?"
			}
			else
			{
				genericBirthday
			}
		}
	}
}

genericBirthday
{
	" %(birthdayprint) of %(bornyearprint).  Ah yes. I'll remember, and add it to the Memory Zone. That's all the questions.\![leave,passivemode]\e"
}
