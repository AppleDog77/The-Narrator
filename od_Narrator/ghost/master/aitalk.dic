//---------------------------AI Talk--------------------------
//Alright, this is it! The bread and butter of your ghost. This is where all their random conversations are stored. Of all the .dic files, this is the one you will probably be adding stuff to and updating the most as new dialogue comes to your mind. It is relatively simple in that there aren't many functions or real coding involved with this file, but there are a few cool tricks you can do within randomtalk that can make dialogue with interesting effects, so I'll point them out as we go along.
//I'm going to leave a lot of examples of different types of dialogue in here that you can study if the possibilities they present intrigue you. Study them carefully!

//Make sure to read the walkthrough (http://www.ashido.com/ukagaka/) for more details about how to properly format ghost dialogue!
//I will reiterate that you should be editing these in Notepad++, and in particular, you should set the Language to C (or Java I guess) to properly highlight all the text. It will make things A LOT EASIER for you, trust me! It will also help you keep track of your brackets in case you forget some. If you click on a line with a bracket in Notepad++, it should highlight where the other bracket ends, or turn purple if there's no finishing bracket (which you should definitely fix!)
//It will also highlight my commented lines in green, so you'll know where they are. Any line beginning with // is a commented line that the code will not read. It's just for your reference!

//--OnAiTalk
//Leave this alone.
//Advanced users, this is mostly setting up whether or not dialogue is in a chain before it displays. Again, you can leave it alone unless you want to screw around with chains for some strange reason.

OnAiTalk
 {
	if RAND(100) < communicateratio
 	{
 		StartCommunicate
	}
 	else
	{
 		if mikireflag == 0
		{
			if CHAIN.IDName == "" {
 				lastTalk = RandomTalk
			}
			else {
				lastTalk = ChainTalk
			}
			lastTalk
		}
 		else
		{ 
		MikireTalk
 		}
	}
 }


//--RandomTalk 
 //Alright, here we go! This is where ALL your ghost's random dialogue will go! These are the conversations that they'll have with you or each other that pop up depending on the talk rate defined in menu.dic (or if you ignored that, set in bootend.dic in the first boot, which would be every five minutes).
 
//*********************Advanced User Info*******************************
//These text boxes are meant for those who have an interest in expanding or using more complicated functions in their ghost. Also for my own reference in the future since I plan on using this template too, haha. If you have no interest in any of this and just want to keep things as simple as possible, feel free to skip these boxes.

//You CAN link to other pools of dialogue in RandomTalk using envelopes/functions, such as %(teatalk) to pull from a pool of dialogue about tea. Then you'd just add that line in among the other dialogue in here with %(teatalk). However, this vastly lowers the probability of dialogue in that function being called. If teatalk only gets called 1/5 times, and it has 10 pieces of dialogue in there, then you're only getting... uh... god, I'm bad at fractions... 1...50th? a chance that a certain teatalk line will appear. LOOK THE GIST IS THAT THE PROBABILITY GETS LOW. This applies to any kind of dialogue in a conditional. A simpler example would be if you have one piece of normal dialogue, and one piece that's an if check that has four pieces of dialogue in there. You'd end up with a 50% chance to get that normal dialogue, and a 50% chance for ONE of the other four pieces of dialogue... which makes the odds of seeing any specific line in that special dialogue that much lower.

//You can't do things like put OnSystemBoot or something in RandomTalk. You could use \![raise] to pull something though, although I'd be careful about it. More on these kind of things and conditionals in general in the coding page on the walkthrough.

//If you split up RandomTalk with if/else checks, then you can redirect in an If to another function, like... if chargermode == "on" { ChargerChatting } else {normal random talk dialogue}. This would redirect the random dialogue to ChargerChatting instead. You can't just throw a function into RandomTalk directly though, like "dialogue 1" "dialogue 2" OnFunctionname "dialogue 3", that kind of thing. You'll have to split it off into its own if or point to it with an envelope.

//You can do multiple ifs in RandomTalk if required... like an if for if a character is asleep, or if a third character is present, or if they're having a nervous breakdown, or if they're sulking. It depends! You can add a bunch of checks leading to specialized pools if you want. Just make sure you leave some normal dialogue in the last else for RandomTalk (unless you want to redirect that somewhere else with an envelope too... although that seems a bit redundant, honestly.)
//***********************************************************************

//nonoverlap_pool should make it so all your dialogue has an equal probability of being called, and it will do each line of dialogue before repeating them. Why is kind of technical and a bit outside the scope of this template, you can look into why elsewhere if you want.
//Pronoun Reference: %(nomPro)/%(oblPro)/%(posPro)
//Stanley's typos are intentional
RandomTalk : nonoverlap_pool
{
if stanleymode == 1
	{			
		"\1\s[11][OK %(username), if there's any way to get my reassurance bucket back, let me know!]\0\s[9]No, don't. Don't let him know.\e"
		
		"\1\s[11][I'm gonna look around this computer and see if I can find anything interesting. Want to come along with me, Narry?]\0\s[1]Uh,\w8\s[0]hmm, I suppose I could, but-\1\s[11]\n\n[half][Great! See you there!]\w8\1\s[10]\0\s[0]\n\n[half]Come back here, Stanley!\s[-1]\w8\w8\w8\w8\w8\w8\w8\w8\w8\w8\0\s[0]\1\s[11]\n\n[half][Wasn't that great?]\0\s[6]\n\n[half]Hmm, I suppose it was rather enjoyable. I found some %(opinions) things in %(usernamesfolder)...\w8\s[3] But please don't run off again!\e"
		
		"\1\s[11][I'm gonna look around this computer and see if I can find a reassurance bucket of some sort. Want to come along with me, Narry?]\0\s[1]Uh,\w8\s[0]hmm, no! You don't need that bucket-\1\s[11]\n\n[half][Great! See you there!]\w8\1\s[10]\0\s[0]\n\n[half]Come back here, Stanley!\s[-1]\w8\w8\w8\w8\w8\w8\w8\w8\w8\w8\0\s[0]\1\s[11]\n\n[half][Aww, I couldn't find a suitable bucket...]\0\s[9]\n\n[half]I'd love to never look at any \f[bold,true]buckets\f[bold,false] ever again...\e"

		"\1\s[11][Uh, I've been finding the weirdest stuff on the Internet...]\0\s[1]Oh no. Stanley, what did you find?\1\s[11]\n\n[half]%(internetoddities)\0\s[9]\n\n[half]Suddenly, the internet disconnected for no reason at all. How strange...\1\s[11]\n\n[half][Hey! Aw man...]\e"
		
		"\1\s[11][Your desktop is really cool! Mine's currently just the default theme...]\e"

		"\1\s[11]['stranger than fiction full movie free watch online']\0\s[3]STANLEY, NO! Those links are full of viruses and adware. You could get-\w8 This computer could get infected! All of %(username)'s lovingly cared for files could get deleted!\1\s[11]\n\n[half][That's strange. All I see is a bunch of-\w5 What the...]\0\s[0]\n\n[half]Sorry Stanley, I've turned off your Internet connection as you clearly have not proven to me that you can navigate the Internet responsibly.\1\s[11]\n\n[half][You're no fun... I was about to watch a funny movie!]\0\s[4]\n\n[half]Sorry, I just don't want to risk anything happening to y-\w8 the computer...\e"

		"\1\s[11][Stranger than Fiction is my favorite movie! I'm not really sure why though...]\0\s[8]Hmm... I don't remember if I have a favourite...\e"
		
		"\1\s[11][Wow! Stunning animation!]\0\s[0]Hmm...\w8\s[6] It looks rather interesting, I admit...\e"
		
		"\1\s[11][Check out this %(opinions) fanfiction on AO3...]\0\s[0]Oh? Let's see it...\w8 It is\w8 %(opinions).\e"
		
		"\1\s[11][Check out this %(opinions) fanfiction on AO3...]\0\s[0]Oh? Let's see it...\w8 It's\w8 %(compliments)!\e"
		
	    "\0\s[0]You know Stanley, I really dislike it when in stories, the ending is not cathartic. An ending can be sad, but it has to be satisfying in some way.\1\s[11][...]\e"
		
		"\1\s[11][Check out this cool program I downloaded! It has many buttons to push! When I push one, more buttons appear!]\0\s[3]Oh dear... buttons are filling up the screen completely! Close the program now, Stanley!\1\s[11]\n\n[half][But, but, I want to push the buttons!...\w8 Fine, I'll close it... But it may take a while to close all these buttons...]\e"

		"\0\s[6]Stanley, I'm writing a brand new story about a seal. Please don't look at it while it's in progress...\1\s[11][Ooh!\w8\0\s[0]\1\s[11] It looks good. I want to see what happens next... Hey, the seal character reminds me of-]\0\s[9]\n\n[half]*sigh* I should have known you would disobey me.\e"

		if month == 4
		{
			if day == 27
			{
				"\0\s[6]Happy Stanley Day!\1\s[11][Stanley Day? What's that?]\0\s[0]\n\n[half]Stanley, you don't even know about your special day? Today is April 27, or the 4th month of the year, and the 27th day of the month. \w8\s[6]It's the day Ultra Deluxe was released!\1\s[11]\n\n[half][OK, so.. Isn't it the anniversary of Ultra Deluxe then? ...\w8]\0\s[9]\1\s[11]\n\n[half][...Oh I get it now...\w8 It's my employee number! 427! I can't believe it took me that long...]\0\s[6]\1\s[11]\n\n[half][Anyway, how should we celebrate?]\0\s[6]\n\n[half]%(username), why not draw some fanart of us? Or even write some fanfiction? It doesn't even need to be good (I write the best stories after all).\e"
			}
		}

		if hasreset == "yes"
		{
		"\0\s[3]Um, Stanley...\w8\1\s[11][What?]\w8\0\s[0]\n\n[half]S-\w8 Stanley, I swear I remember this happening before...\w8 I remember you escaping the Parable and ending up here on this very computer before...\w8 Or was it some other computer? Why is my memory so fuzzy about this particular thing? \w8*sigh* Nevermind, Stanley. Don't pay me any attention. \s[9]Go back to whatever the hell you were doing before I started bothering you about something unimportant.\e"
		}

		"\0\s[3]Stanley, um...\w8\1\s[11][What?]\w8\0\s[0]\n\n[half]S-\w8 Stanley, did you like the Parable?\1\s[11]\n\n[half][Well enough I suppose. I mean, at first I really liked it, then when I realized there was no real escape I began to hate it, but then after a while I didn't particularly care about it, then a few years later or so, I started to like it again...\w8 The point is, without you it'd have been a complete disaster...]\0\s[6]\n\n[half]Um, great to hear, Stanley!\e"
	}
else //1 - Embarrassed, 2 - Surprised, 3 - Worried, 4 - Sad, 5 - Determined, 6 - Happy, 7 - Angry, 8 - thoughtful, 9 - Unamused
	{
	"\0\s[0]%(username) continued to goof off on the computer instead of getting around to work %(nomPro) was putting off.\e"
	
	"\0\s[0]%(username) decided to actually go ahead and start working on %(posPro) project that %(nomPro) had been putting off for so long.\e"
	
	"\0\s[0]You look like you're bored, %(username).\w8\0\s[0] %(envelope)\e"
	
	"\0\s[0]Hm, have you cleaned up your %(usersfolder) lately? I took a peek at it, and saw a few files that don't really belong there.\e"

	"\0\s[0]You really should go ahead and organize your files at some point. Just set aside a weekend or two and start organizing them by any method you desire.\e"

	"\0\s[0]Maybe you should take a break, %(username). You've been working for an awfully long time... Perhaps you should %(hobbies2)?\e"

	"\0\s[0]%(username) decided to take a break, as %(nomPro) had been working for an awfully long time... Perhaps you should %(hobbies2)?\e"

	"\0\s[5]Alright %(username), I'm currently writing a completely new story. It's not done yet, so please don't peek.\e"

	"\0\s[0]Let's start at the beginning... this is the story of a person named %(username)...\e"

	"\0\s[6]The Internet is a wondrous place, %(username)! I've been Googling various things I've always wished to know, such as, 'what does the aurora borealis look like?', and, 'what is the meaning of life?' and it feels like some sort of adventure!\e"
	
	"\0\s[0]%(username), did you know that humans don't actually know what colours dinosaurs were?\e"

	"\0\s[9]At least I've gotten away from that dratted \f[bold,true]bucket\f[bold,false]...\w8 I regret ever putting it in The Stanley Parable 2...\w8 It caused so many problems! *sigh*\e"

	"\0\s[4]%(username), I've always liked seals. I always wanted to make a story called 'Stanley the Seal'...\w8 guess it won't happen now...\e"
	
	"\0\s[8]I could've sworn The Stanley Parable was released on consoles all the way back in 2013... Strange...\e"
	
	//You can use the usersfolder envelope creatively if you like, haha.
	
	//--Chains
	//Chain dialogue is unique. A dialogue chain consists of multiple bits of dialogue that get called in order over a period of time.
	
	"\0\s[7]%(username), these reviews are insidious and rotten.\nThis one says, 'The narrator was annoyingly smug jerk, to the point that after I beat the game in 10 minutes, I was more than happy to be rid of him, forever. Waste of money.' See? Rubbish, clearly.\e:chain=reviews"
	
	//Note here that instead of ending the dialogue with the normal end tag of \e, it ends with \e:chain=achain. This will link down below to a chunk of code outside RandomTalk called achain. You can scroll down and find it now if you want. You can name your chain anything you want, it'd just follow the same format of \e:chain=yourchainsname. Once a dialogue has entered a chain, they won't say any other random dialogue until the chain is finished.
	
	"\0\s[8]Have you ever pondered on any of the mysteries of life?\e:chain=life"

	"\0\s[8]As far back as I can recall, I've always been a narrator, a storyteller. My greatest work yet has been The Stanley Parable. But even before it, I've been narrating all sorts of stories!\e:chain=stories"
	
	//Here, this will link to a different chain to continue the conversation. You can scroll down to the section on chains to see this in action.
		{
		"\0\s[8]Ah, The Stanley Parable...\e:chain=parable"
		}

		{
		"\0\s[8]You know something? I seem to have rather mixed feelings on the Adventure Line\f[sup,true]TM\f[sup,false]...\w8 On the one hand, me and Stanley,\w8 got into all sorts of fun adventures with it\f[sup,true]TM\f[sup,false]! But on the other...\w8\0\s[9] well, it\f[sup,true]TM\f[sup,false] kept ruining my story!\e:chain=advline"
		}
	//--If statements
	//You can put if statements in RandomTalk! They don't even need Else statements, unless you want to keep two sets of statements completely separate - for example, you have one pool of conversations for when there are two characters, and one for if there are three characters. You wouldn't want these to overlap, so you'd put one pool in the if statement and the other in the else. Most of the time though, you won't need an Else statement for these, since they'll mostly only be adding in dialogue if the if statement is true. 
	
		if nowshell == "master" //This checks to see what shell they're currently using. You may remember this value being defined back in bootend.dic. If they're in their default shell...
		{
		//Then this conversation is available! Note the brackets enclosing this set of dialogue.
		"\0\s[0]There's so much information on the World Wide Web! \n It can get a little overwhelming sometimes.\e"
		}
	
	//You can also put in multiple ifs checking for the same thing to vary the responses. In this case, it's checking to see if they're wearing another shell. You don't need to use elseifs for this! Just an if is fine.
	if nowshell == "Hypothetical Shell that doesn't actually exist"
		{
		"\0\s[0]This is dialogue related to a shell we don't actually have.\w8\1\s[18]Unless it somehow pops into existence.\e"
	
		"\0\s[0]This is more dialogue related to a hypothetical shell we don't actually have.\w8\1\s[19]It's not happening.\e"
		}
	//After the if statement is done, you can continue with dialogue as normal. As you can see, you can move the ifs around in here, it doesn't really matter. You may want to stick them all in one place together if you want to keep track of them, or you can scatter them around your dialogue as you please. It's up to you. These two lines below are just normal random dialogue.
	
	
	//And here we're going to go back into ifs! You see, you can space out your ifs with normal dialogue if you want, as I just mentioned. Anyway, you can set up if statements to check for a lot of different things!
	
	//OKUAJUB: You can also put if checks inside a dialogue, so the dialogue changes depending on some variable.
		{ //Setting up a little dialogue here where Snake can respond in different ways depending on how he feels about the user. This first set of brackets makes sure each "if" is contained in this one dialogue.
		"\0\s[0]One day, for no reason at all, the Narrator asked himself: Do I like being on %(username)'s desktop?\n\n[half]" //This sets up the first line, which never changes. 
		-- //This makes it so the ghost can run through the if checks without disrupting the dialogue. Depending on if the user meets Snake's feelings criteria, it will say a specific line.
		if narrFeelings >= -1 && narrFeelings <= 20
		{
			"\0\s[0]It's OK."
		}
		elseif narrFeelings >= 21 //Here, the ghost will pick one of these dialogues, not all four. Each has a 1/[number of dialogues] chance to be picked, so if there's 4 dialogues, there's 1/4 chance of it being picked.
		{
			"\0\s[0]I like being on %(username)'s desktop."
			"\0\s[0]It's nice."
			"\0\s[0]I think it's a lovely desktop."
			"\0\s[6]Nice colouration, hm?"
		}
		elseif narrFeelings <= -1 //Since there's only 1 dialogue here, it has a 1/1 chance of being picked, which is 100% of the time.
		{
			"\0\s[7]I dislike being on %(username)'s desktop."
		}
		--
		"\e" //Closing the dialogue.
		}
	
		{
		"\0\s[0]"
		--
		if narrFeelings >= -1 && narrFeelings <= 20
		{
			"\0\s[8]%(username), while I'm here...\w8 Maybe you and I-\w8 we-\w8 could,\w8 talk?\e"
			
			"\0\s[0]You have an intriguing desktop, to say the least. Very good.\e"
		}
		elseif narrFeelings >= 21
		{
			"\0\s[6]It's such a shame sharks are a source of fear for most; they're truly majestic creatures!\e"
			
			"\0\s[6]%(username), did you know that night sharks are quick, nocturnally active, schooling predators that feed mainly on small bony fishes and squid?\e"
			
			"\0\s[6]%(username), check out this funny review by Abraham Lincoln: The narrator is so funny he makes me giggle like teehee hoohoo haahaa heehee wahoo\e"
			
			"\0\s[0]Played anything interesting lately? I like story-based, linear games, of course.\e"
			
			"\0\s[0]What an interesting desktop you have here...\w8 It has a brilliant colour scheme, and a wonderful wallpaper, and a beautiful sound scheme, and great icons and cursors. I- \w8\0\s[6]I really like it, %(username)! You could become an interior designer someday!\e"
		}
		elseif narrFeelings <= -1
		{
			"\0\s[4]A pity... I was hoping this place would be much better than my old Parable...\e"
			
			"\0\s[4]When are you going to uninstall me? So I can return to the Parable?\e"
			
			"\0\s[7]I'm very tempted to do...\w8 \f[bold,true]something\f[bold,false]\w8 to your computer...\w8 But I'd just be blocked by your antivirus, so there's no point...\e"
		}
		--
		"\e"
		}

		{
		"\0\s[0]"
		--
		if narrMood >= 40 && narrMood <= 50
		{
			"\0\s[8]%(username), while I'm here...\w8 Maybe you and I-\w8 we-\w8 could,\w8 talk?\e"
		}
		elseif narrMood >= 70
		{
			"\0\s[6]%(username), did you know that the sunset on Mars appears to be blue to human eyes?\e"
			"\0\s[6]%(username), did you know that owls have a natural fear of each other and must somehow overcome it in order to mate?\e"
		}
		elseif narrMood <= 20
		{
			"\0\s[7]%(Mock('This computer is truly excellent!',1))\e"
		}
		--
		"\e"
		}
	//One of the cooler ones I think are ones set to check for time. This one for example checks if the month is December.
	
		if month >= 12
		{
		"\0\s[6]It shall soon be Christmas! My favourite holiday, filled with good cheer and nice decorations.\e"
		
		"\0\s[6]*hums Jingle Bell tune*\e"
		}
	
	//So you can use these to check for any number of situations. I think this feature is really neat, so I'm going to set up some quick default responses for the months, days, and time of day. If you don't want to do these, you can just delete this whole set of ifs down to the //--Double Envelopes section below.
	//You can also nest ifs within these, so you could check if it was the 27 of April in the morning for example. You can also add or take away dialogue from these as you like, so if you want to have five dialogue options for April or one for January, you can totally do that.
	
		if month == 1
		{
		"\0\s[0]A new year, a new beginning.\e"
		
		"\0\s[0]As a reminder, it's okay if you didn't get to fulfil your last New Year's resolution! You can always make it this year's resolution, or just abandon it entirely! What good is a resolution that just clutters up your year, and doesn't allow you to do the things you WANT to do?\e"
		}
		if month == 2
		{
		"\0\s[0]It's February, in case you've lost track of time during your nightly work sessions.\e"
		}
		if month == 3
		{
		"\0\s[0]It's March, the start of spring and the end of winter, finally.\e"
		}
		if month == 4
		{
		"\0\s[0]April is a very important month to me... Specifically, April 27, 2022, when The Stanley Parable Ultra Deluxe was released. "
		--
		if tspdislike == "true"
		{
		"\w8\0\s[4]Too bad you don't like it... "
		}
		--
		"\w8\0\s[0]What a stupendous occasion that was! Again!\e"
		}
		if month == 5
		{	
		"\0\s[0]Apparently it's rather hot in your world... At least the temperature is even, here in this computer.\e"
		}
		if month == 6
		{
		"\0\s[0]It'd be rather nice to go to the beach now...\e"
		}
		if month == 7
		{
		"\0\s[0]July is a very important month to me... Specifically, July 31, 2011, when The Stanley Parable Original was released. "
		--
		if tspdislike == "true"
		{
		"\w8\0\s[4]Too bad you don't like it... "
		}
		--
		"\w8\0\s[0]It was the beginning of a new era in videogaming...\e"
		}
		if month == 8
		{
		"\0\s[0]Soon, it shall be autumn, my favourite season. The gradual change of the leaves from green to orange...\w8 the chilling breeze in the air...\w8 the nights getting longer...\w8 \s[6]Ah, what a wonderful season!\e"
		}
		if month == 9
		{	
		"\0\s[0]Ahh, I remember September 2022...\w8 When I first made it to the real world, ish...\e"
		}
		if month == 10
		{
		"\0\s[0]October is a very important month to me... Specifically, October 17, 2013, when The Stanley Parable was released. "
		--
		if tspdislike == "true"
		{
		"\w8\0\s[4]Too bad you don't like it... "
		}
		--
		"\w8\0\s[0]What a momentous occasion that was!\e"
		
		"\0\s[0]Halloween is my second favourite holiday after Christmas. I like to be spOoOoOoky now and then.\e"
		}
		if month == 11
		{
		"\0\s[0]The year is almost over already?! Where has the time gone? Has it just flown us by like a swooping eagle?\e"
		
		"\0\s[0]I hope you've accomplished everything you've wanted to accomplish this year, and if not, I hope you can achieve those things next year.\e"
		}
	//These ifs check what day of the week it is.
		if weekday == 1
		{
		"\0\s[0]%(username) was going back to work in %(posPro) office (or other place of work).\e"
		}
		if weekday == 2
		{
		"\0\s[0]It's Tuesday, in case you've lost track of time during your nightly work sessions.\e"
		}	
		if weekday == 3
		{
		"\0\s[0]It's Wednesday, in case you've lost track of time during your nightly work sessions.\e"
		}
		if weekday == 4
		{
		"\0\s[0]It's Thursday, in case you've lost track of time during your nightly work sessions.\e"
		}
		if weekday == 5
		{
		"\0\s[0]It's Friday. At long last, it's almost time for the weekends!\e"
		}
		if weekday == 6
		{
		"\0\s[0]Ah! The weekends! Time to kick back, relax, and watch a %(genre) movie. Or...\w8 do you actually want to do something useful?\e"
		}	
		if weekday == 0
		{
		"\0\s[0]Ah! The weekends! Time to kick back, relax, and watch a %(genre) movie. Or...\w8 do you actually want to do something useful?\e"
		}
	//These ifs check for the time of day as defined in bootend.dic. Do you remember the words used for each chunk of time in GetTimeSlot? These are the same words!
		if timeslot == "morning"
		{
		"\0\s[0]The beginning of a new day...\w8 How will you spend it, %(username)?\e"
		}
		if timeslot == "evening"
		{
		"\0\s[0]Don't you want to see the beautiful sunset outside?\e"
		}
		if timeslot == "latenight"
		{
		"\0\s[0]%(username) decided to watch a %(genre) movie tonight.\e"
		}
		if timeslot == "midnight"
		{
		"\0\s[0]While I admit it's rather nice of you to keep the computer open for this long, maybe you should go to sleep at some point or another. \s[3]D-\w8don't worry about me; I've got projects to work on and various things to do...\e"
		}
	 }
}


//--Chains
//Here is where you will put your bits of chain dialogue. They are outside of OnAiTalk, which makes them a bit more flexible as I mentioned above.
//Each chain function will go through each part of the chain in order even if it's in one function, until it goes to \e:chain=end which will end the chain, as you could probably guess. So you can put the entire chain dialogue into one place.

reviews
{{CHAIN
	//this will happen the first time the chain is called
	"\0\s[7]And this one goes, 'GAME BAD!!!!! I hate THE Narrator man!!!! WHY IS he british!!!!!' \n I don't know what 'British' even means! Horrible.\e"
	
	//they will then go to this dialogue next, this will be the last piece of dialogue in the chain, then they will go back to their normal dialogue
	"\0\s[7]The worst one is this: 'This is one of the stupidest games I've ever played.' Blah, blah blah...\w8 '...I could've beat the game in about 10 minutes, maybe less. The rest of the time was spent on detours that ended up making me start the game over again multiple times.\nIgnore the positive reviews and don't waste your money.' \f[bold,true]IGNORE THE POSITIVE REVIEWS?!\f[bold,false] \n You missed the whole point of the game! \n I-\w8\s[0] I hope Steam removes these reviews.\e:chain=end"

}}CHAIN

//Pay careful attention to the CHAIN text and double brackets for these. Double brackets, CHAIN, dialogue, double brackets, CHAIN. If you are planning on making chains, I'd recommend just copying and pasting the chain example here and changing the dialogue and name of the function as you need. Less likely for mistakes to happen, you know?
//Note also it ends with \e:chain=end, basically ending the chain.

life
{{CHAIN
	"\0\s[8]I wonder what the answer to it all is. Apparently it's the number 42, according to a very lovely book called the Hitchhiker's Guide to the Galaxy...\e"
	
	"\0\s[8]Oh well. I suppose until we know the answer, all we can do for now is the best we can, getting along with each other and taking care of ourselves...\e:chain=end"
}}CHAIN

advline
{{CHAIN
	"\0\s[0]The Stanley Parable Adventure Line\f[sup,true]TM\f[sup,false] was indeed confusing. But I don't think it's as baffling as the outrageous fact,\w7 that some people,\w5 don't actually like the Adventure Line\f[sup,true]TM\f[sup,false] music! Can you believe it?! I mean really, it's perfect! It encapsulates the spirit of the Adventure Line\f[sup,true]TM\f[sup,false] perfectly! Oh how I wish I could play it for you right now...\e"

	"\0\s[0]In fact, I'd like to know something very important, so important that it may crush the foundations of reality if you get it wrong:\w8 Do you like The Stanley Parable Adventure Line\f[sup,true]TM\f[sup,false] Music?\n\n[half]\![*]\q[Yes I do!,yupyupyup]\n\![*]\q[No I don't!,nosorry]\n\n[half]\![*]\q[Cancel,CANCEL]"
}}CHAIN

stories
{{CHAIN
	"\0\s[8]Storytelling, %(username), is like a sort of dance between the narrator of the tale and the listener, where both have to sync up in perfect harmony, or the story is ruined and we-\w8 they have to start all over.\e"

	"\0\s[0]When one listens to a story, one gets to experience it, and thus make up their own interpretation of it. But what if their reinterpretation is...\w8 um...\w8 really silly! Really off-the-mark, you know? I've never liked that possibility.\e"
	
	"\0\s[0]...But, I suppose,\w8 I've gotten used to it, over the years. I've gone on to accept it as an inevitable result of telling stories. And so, if I ever meet Stanley again I'll...\w8 I'll make amends with him. I'll \s[4]*sigh* apologize, I guess.\e:chain=end"
}}CHAIN

//You can make chains as long or as shot as you want! Just make sure to end the chain when you're done.

parable
{{CHAIN
	"\0\s[0]%(username), I have a question for you. Do you like The Stanley Parable?\n\n[half]\![*]\q[Yes I do!,yepyepyep]\n\![*]\q[No I don't!,nopenopenope]\n\n[half]\![*]\q[Cancel,CANCEL]"
}}CHAIN
Select.yepyepyep
	{
	tsplike = "true"
	narrFeelings += 1
	narrMood++
	"\0\s[6]Why, thank you, %(username). Of course, I knew you would enjoy the game, and be a fan of it, of course, clearly you are since you downloaded me.\e:chain=end"
	}

Select.nopenopenope
	{
	tspdislike = "true"
	narrFeelings -= 1
	narrMood--
	"\0\s[7]\f[bold,true]NO?!\f[bold,false] What do you mean, \f[bold,true]NO?!\f[bold,false] What didn't you like about the game?! Was it the seemingly endless corridors? Were you overwhelmed by the deep philosophical messages of the game?! \w8\0\s[9]Why did you even download me in the first place if you disliked my game that much?\e:chain=end"
	}

Select.yupyupyup
	{
	linelike = "true"
	narrFeelings += 1
	narrMood++
	"\0\s[6]Why, thank you, %(username). I knew you'd like the fun and bouncy Adventure Line\f[sup,true]TM\f[sup,false] music.\e:chain=end"
	}

Select.nosorry
	{
	linedislike = "true"
	narrFeelings -= 1
	narrMood--
	"\0\s[7]Wha-\w8 You too?! I can't believe this! Why not?!\w8 Is it because you find it annoying?! Or too loud?\w8\0\s[9] Or any number of silly reasons... *sigh*\e:chain=end"
	}
//Alright, we're done with the random conversations for now, but there are a few other things in aitalk that we'll need to fill out too.


//-OnMinuteChange
//These are time-related bits of dialogue for your ghost to say. If you're uninterested, you can delete it all except for a line for MikireTalk. So it'd look something like

//OnMinuteChange
//{
//HourCheck
//--
//if mikireflag == 1
// 	{
// 		MikireTalk
//	}
//}

//But I think these are kind of neat, so I'd leave them myself.


//Keeps track of if an hour has passed. Just ignore this.
HourCheck
{
if passmin >= 59
	{
		passmin = 0
		passhour = passhour + 1
	}
}


OnMinuteChange //This is what will trigger time-based dialogue for your Ghost.
 {
	HourCheck //checks to see if an hour has passed, ignore it
	--
 	if minute == 0 //These ifs will check what time it is. Here, it's seeing if the minute equals zero...
	{
 		if hour == 12 //And the hour equals 12, meaning it's noon. You can change this to some other hour if you want.
		{
			narrFeelings += 5
			narrMood += 5
 			"\0\s[0]It's noon. The hottest hour of the day. Don't humans require water?\e"
			//Replace with appropriate dialogue as you want.
		}
 		elseif hour == 0 //If the hour is zero, aka midnight. Again, you can change this to whatever hour you want to check for. This section is flexible! You can also add more elseifs if you want to check for other hours.
		{
			narrFeelings += 5
			narrMood += 5
 			"\0\s[0]It's midnight! %(username) decided to shut off %(posPro) computer and go to bed, to get a good night's rest. I don't actually need rest, myself, and although I do have some important projects I need to work on, I actually don't really mind if you're not quite ready to go to sleep just yet.\e"
			//Then replace the dialogue with what's appropriate.
		}
		else
		{
			narrFeelings += 5
			narrMood += 5
			"\0\s[0]It's %(hour12)'o clock.\e"
			//%(hour12) stores the time. This is a general top of the hour notification. I personally like this because it helps me keep track of time when I've been working on something, so when a ghost is all "Hey it's 3 o clock" I can be like woah really when did that happen. If you think this is annoying though, you can just delete this bit of dialogue to leave this else statement blank, or leave "" in here instead.
		}
	}
	//You can also check for more specific times! For example...
	elseif hour == 23 && minute == 55 //this checks to see if the hour is 23 and the minutes are at 55... essentially, 11:55 pm.
	{
		"\0\s[0]5 minutes to midnight...\e"
		//Replace with what you like!
	}
	//Don't touch this part.
	elseif mikireflag == 1
 	{
 		MikireTalk
	}
 }

//--OnSecondChange
//Like the above, this handles what happens every time a second goes by. Most of this you will not have to touch.

OnSecondChange
 {
	if passsec == 59
 		{
	 	passsec = 0
 		passmin = passmin + 1
		}
 	else
 		{
	 	passsec = passsec + 1
		}
	if mikireflag == 0 && reference1 == 1 //Dialogue for putting them off the screen. You could make this a unique line if you wanted (Like "Hey! What are you doing?"), and have MikireTalk below be for if they continue to be offscreen ("Why are you leaving me out here? Help!" for example). I'll add an example bit of dialogue and comment it out, you can uncomment it and use it if you like, or just leave it out and use MikireTalk below.
	{
		"\0\s[0]I seem to be in a strange void... Um..."
		
		MikireTalk
	}
	if mikireflag == 1 && reference1 == 0 //Dialogue for coming back on the screen
	{
		EndMikireTalk
	}
	mikireflag = reference1 //reference1 is if the ghost is offscreen or not
	if reference2 == 1
	{
 		//This dialogue is for when the two characters are overlapping each other. If you don't want your characters to care, you can just leave this blank.
		
 		//"\0\s[0]gay\e"
		
		//You can see here the use of two envelopes, screenwidth and screenheight, to tell the user their resolution. Oddly, they are not in parentheses. I'm not sure why this is, but they don't display right otherwise. An odd quirk with these two envelopes.
		//Note also how Triangle moves away at the end of the dialogue. This is due to the \4 tag. That will make any one character move away from the other if they are able. I talked about this tag and its counterpart tag \5 in the SakuraScript page on the walkthrough.
	}
 }

 //---- MikireTalk ---------------------------------------------------------------------
 //MikireTalk is dialogue for when your main character is off-screen. Like if you dragged Girl over to the side of your monitor until she was partially concealed by it.
 
MikireTalk
 {
	"\0\s[0]Why is there a strange void beyond your computer? All I can see is a sign that says, \f[bold,true]Ctrl-Shift-F12\f[bold,false]. What does it mean?\e"
	//Note the hotkey combo Narrator mentions. He's telling the truth, that should bring them back on the screen.
 }

 //----EndMikireTalk--------------------------------------------------------------------
 //For after you bring the character back on screen.
 
EndMikireTalk
 {
	"\0\s[0]Whew! I'm back.\e"
 }


//**** OnSurfaceRestore *****************************************************************
//OnSurfaceRestore is a handy function. What this does is that after a short period of time, the ghost will go back to its default pose, so you won't have a ghost stuck in one expression for too long. It's also helpful if you've made one of the characters disappear using \s[-1] in dialogue and didn't bring them back at the end of it. This will do that for you.
//I'm going to comment out the if/else statements in this because the circumstances in which they'd come up seem pretty unlikely and unnecessary if you're just going to be making a simple ghost. You can just leave this function alone and move on if you want. However, if you do want to use them, just uncomment the lines by deleting the slashes and fill in the info as you need.

//*********************Advanced User Info*******************************
//You can put if statements in OnSurfaceRestore to make exceptions for certain poses, or to make sure that once they're in a certain pose, they stay in that pose. For example, if you turn my Hunter and Smoker ghost into eggplants, there's a check for the their eggplant pose numbers to make sure they STAY eggplants when OnSurfaceRestore is called.
//You can also use OnSurfaceRestore to clean up things that might be left on the screen, primarily from using p[number]\s[] to call up other objects or characters. Just make sure to add a p[number]\s[-1] to OnSurfaceRestore, and that should get rid of it each time the ghost cleans itself up.
//Alright, here is where all your dialogue will go. I hope you studied how to format dialogue carefully in the walkthrough, as there is little here I can help you with. You're going to have to write most of it yourself. So instead, I'll give you a set of examples to look at.
	//Note here that the code comes back to character 0 and spaces out their second statement with \n\n (or \n\n[half]... really whatever spacing looks best in your balloon). This makes it so the next line of dialogue from them is spaced apart from the previous in the balloon, which will make it easier for your user to read.
	//As you can see, you can put any envelope from word.dic in here, as long as you properly format it as an envelope by putting a percent sign in front and putting it in parentheses. %(username), %(icecream), %(bunnies), whatever, this is up to you as long as you've defined it in word.dic. You can see how the values stored in the envelope appear in the balloon when the dialogue is called.
	//Do note that you cannot put quotation marks in your dialogue. If you're using Notepad++ which you should be doing, you'll see the line break and turn black if you do. Use apostrophes instead.
	//You can use the \w tag to time your dialogue. \w goes from 1-9, although I usually leave it at 8 to be safe, and while you can't go above 9, you can layer \w tags to add up to higher numbers. Here, \w8 and \w6 combine to make 14.
	//"\0\s[0]I am pausing \w4for dramatic \w6emphasis. \w8P\w6 - \w6A - \w6U - \w6S - \w6E.\e"

	//You can also pause multiple times within sentences, like so. At the end, you can pause between letters if your ghost is spelling something.

	//You can use \n to move dialogue down one line, like hitting enter once.

	//Here, the characters are using the %(username) envelope to use the user's name. More on envelopes in word.dic. You can use any envelope you want in dialogue, practically.

	//You can use the pronouns set up during their first boot (see bootend.dic) or in the config menu (menu.dic) in sentences like this as well. You can see that the envelope %(heshe) replaces where he or she would be in the sentence, and so on for the rest of them. This makes it so they use the correct pronoun in the right place.

	//"\1\s[10]Here we'll use the envelope 'internalenvelope' to show an envelop containing another envelope.\w8\0\s[0]%(internalenvelope).\e"

	//Here's an example using the internal envelope I mentioned in word.dic. Basically, a function within a function. More on that kind of thing on the coding page of the walkthrough.

	//"\1\s[10]Here is dialogue referring to Anchor 1.\w8\0\s[0]Here is dialogue referring to Anchor 2 and Anchor 3.\e"

	//Anchor words are defined more in anchor.dic. Note here when you see this dialogue that Anchor 1, 2, and 3 become links when spoken, even if they weren't written as links in the dialogue in this file. This is why anchor words are convenient, you don't have to set up link code every time they say a certain word. Try clicking the links when they appear to see what they lead to. It'll give you an idea of exactly how anchors work.
	//You can see that this follows the formula of the above, although there's only one set of multiple responses in here, then Triangle continues with his sentence. You can use this feature in many different ways if you're creative.

	//"\0\s[0]\f[height,20]These words are really large.\f[height,default]\w8\1\s[10]These words are a normal size. \w8\f[height,6]These words are small.\f[height,default]\e"

	//You can use other fancier SakuraScript bits in your dialogue if you want to get font effects, although I won't get too much into them here. In this case, \f[height,20] changes the height of the font, in this case to 20 or to 6, and then \f[height,default] changes them back to normal. I touch more on this in the SakuraScript page of the walkthrough.

	//"\0\s[0]\f[strike,true]These words are struck out.\f[strike,default]\w8\1\s[10]\f[sub,true]These words are a subscript.\f[sub,false] \f[sup,true]These words are a superscript.\f[sup,false] \f[underline,true]These words are underlined.\f[underline,default] \f[bold,true]These words are bold.\f[bold,false] \f[italic,true]These words are italic.\f[italic,false] \f[color,186,146,112]These words are a color.\f[color,default] This tag would return to default.\f[default]\e"

	//Here's a list of similar tags you may find useful. You can see they function much like <b> or <i> tags in html. You just enclose the piece of text you want to change with them. Note that they start with \f[word,true] to turn it on, then \f[word,false] or \f[word,default] to turn it off. I assume you can tell what the tags do by the text they enclose.
	//For the \f[color] tag, the three colors listed are the RGB values of the color you want to use for your text. Change them to whatever color you want to use. \f[default] can be an easy way to quickly go back to the default word setting in your balloon after messing with colors and effects a lot.
	//"\0\s[3]\1\s[15]\_sWe are saying this dialogue at the same time.\e"

	//This dialogue uses a unique tag, \_s. \_s makes it so both characters will speak the same words at the same time. Try it in Script Input to see how it works. I talk about it a little more on the walkthrough page for scripting.
//***********************************************************************

OnSurfaceRestore
 {
	if stanleymode == 1
	{
	"\0\s[0]\1\s[11]\e"
	}
	else
	{
	"\0\s[0]\1\s[10]\e"
	}
 }

 
 //--OnKeyPress
 //This defines the hotkeys your ghost will use. You can change these to whatever you want, but I don't really know why you would. I'd just leave this alone. Advanced Users can add new hotkeys attached to whatever function if you want.
 
OnKeyPress
{
	if reference0 == "t"
	{
	OnAiTalk
	}
	elseif reference0 == "r"
	{
	OnLastTalk
	}
	elseif reference0 == "f1"
	{
	"\![open,readme]"
	}
}
